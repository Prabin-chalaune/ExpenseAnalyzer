version: '3'
services:
  frontend:
    restart: always
    build:
      context: ./expense-traker
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    container_name: react-container
    environment:
      - WATCHPACK_POLLING=true
    networks:
      - mern-stack-network
    volumes:
      - ./app/node_modules
      - ./expense-traker:/app
    depends_on:
      - backend

  backend:
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 5500:5500
    container_name: node-container
    networks:
      - mern-stack-network
    volumes:
      - /app/node_modules
      - ./backend:/app
    depends_on:
      - mongo
    environment:
        MONGO_URL: mongodb+srv://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@expensetraker.mrgmxym.mongodb.net/?retryWrites=true&w=majority&appName=expenseTraker

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    container_name: mongo-container
    networks:
      - mern-stack-network
    volumes:
      - mongoData:/db/db
    environment:
        MONGO_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
        MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

    # mongo-express should only be used privately for development purposes.
    # It helps us interact with a mongoDB database using our browser
  #  mongo-express:
  #     image: mongo-express
  #     depends_on:
  #        - mongo
  #     ports:
  #        - 5000:5000
  #     environment:
  #        ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
  #        ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
  #        MONGODB_SERVER: mongo
  #        BASICAUTH_USERNAME: admin
  #        BASICAUTH_PASSWORD: admin123456
  #     volumes:
  #        - mongo
  #     networks:
  #        - mern-stack-network
networks:
  mern-stack-network
volumes:
  mongoData:
   driver: local  # where we want to persist data on the host machine.

